syntax = "proto3";

option csharp_namespace = "Meteor.Sessions.Infrastructure.Grpc";

package meteor.employees;

enum EMPLOYEE_STATUS {
  EMPLOYEE_STATUS_INACTIVE = 0;
  EMPLOYEE_STATUS_ACTIVE = 1;
  EMPLOYEE_STATUS_TERMINATED = 2;
  EMPLOYEE_STATUS_ON_LEAVE = 3;
}

message Employee {
  int32 id = 1;
  string email_address = 2;
  string phone_number = 3;
  string first_name = 4;
  string last_name = 5;
  EMPLOYEE_STATUS status = 6;
}

message ValidationError {
  string message = 1;
  repeated string fields = 2;
}

message ValidationResult {
  string message = 1;
  repeated ValidationError errors = 2;
}

message GetEmployeeByIdRequest {
  int32 id = 1;
}

message GetEmployeeByEmailRequest {
  string email_address = 1;
}

message CreateEmployeeRequest {
  string email_address = 1;
  string phone_number = 2;
  string first_name = 3;
  string last_name = 4;
  string password = 5;
  bool activate = 6;
}

message UpdateEmployeeRequest {
  int32 id = 1;
  optional string email_address = 2;
  optional string phone_number = 3;
  optional string first_name = 4;
  optional string last_name = 5;
  optional EMPLOYEE_STATUS status = 6;
  optional string password = 7;
}

message RemoveEmployeeRequest {
  int32 id = 1;
}

message ValidatePasswordRequest {
  int32 employee_id = 1;
  string password = 2;
}

message SaveEmployeeResponse {
  oneof result {
    Employee employee = 1;
    ValidationResult validation_result = 2;
  }
}

message StringResponse {
  string message = 1;
}

message PasswordValidationResponse {
  int32 employee_id = 1;
  bool valid = 2;
}

service EmployeesService {
  rpc GetEmployeeById(GetEmployeeByIdRequest) returns (Employee);
  rpc GetEmployeeByEmail(GetEmployeeByEmailRequest) returns (Employee);
  rpc CreateEmployee(CreateEmployeeRequest) returns (SaveEmployeeResponse);
  rpc UpdateEmployee(UpdateEmployeeRequest) returns (SaveEmployeeResponse);
  rpc ValidatePassword(ValidatePasswordRequest) returns (PasswordValidationResponse);
  rpc RemoveEmployee(RemoveEmployeeRequest) returns (StringResponse);
}
